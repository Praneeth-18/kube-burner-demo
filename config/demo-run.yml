{{- $meta := or (index . "UserMetadata") (index . "Metadata") -}}
{{- $uuid := or (and $meta (index $meta "uuid"))
               (and $meta (index $meta "UUID"))
               (index . "uuid")
               (index . "UUID") -}}
{{- $namespacePrefix := default "app-demo"
        (or (and $meta (index $meta "namespacePrefix"))
            (index . "namespacePrefix")) -}}
{{- $namespace := printf "%s-%s" $namespacePrefix $uuid -}}
{{- $appName := default "kube-burner-demo"
        (or (and $meta (index $meta "appName"))
            (index . "appName")) -}}
{{- $enableLoad := default true
        (or (and $meta (index $meta "enableLoad"))
            (index . "enableLoad")) -}}
{{- $baselinePause := default "90s"
        (or (and $meta (index $meta "baselinePause"))
            (index . "baselinePause")) -}}
{{- $loadPause := default "180s"
        (or (and $meta (index $meta "loadPause"))
            (index . "loadPause")) -}}
{{- $backendImage := or (and $meta (index $meta "backendImage"))
                            (index . "backendImage") -}}
{{- $frontendImage := or (and $meta (index $meta "frontendImage"))
                             (index . "frontendImage") -}}
{{- $loadImage := or (and $meta (index $meta "loadGeneratorImage"))
                          (index . "loadGeneratorImage") -}}
{{- $backendName := default "app-demo-backend"
        (or (and $meta (index $meta "backendName"))
            (index . "backendName")) -}}
{{- $backendService := default "app-demo-backend"
        (or (and $meta (index $meta "backendServiceName"))
            (index . "backendServiceName")) -}}
{{- $frontendName := default "app-demo-frontend"
        (or (and $meta (index $meta "frontendName"))
            (index . "frontendName")) -}}
{{- $frontendService := default "app-demo-frontend"
        (or (and $meta (index $meta "frontendServiceName"))
            (index . "frontendServiceName")) -}}
{{- $frontendConfigName := printf "%s-config" $frontendName -}}
{{- $loadName := default "app-demo-load"
        (or (and $meta (index $meta "loadGeneratorName"))
            (index . "loadGeneratorName")) -}}
{{- $loadService := default "app-demo-load"
        (or (and $meta (index $meta "loadGeneratorServiceName"))
            (index . "loadGeneratorServiceName")) -}}
{{- $backendReplicas := default 2
        (or (and $meta (index $meta "backendReplicas"))
            (index . "backendReplicas")) -}}
{{- $frontendReplicas := default 1
        (or (and $meta (index $meta "frontendReplicas"))
            (index . "frontendReplicas")) -}}
{{- $loadGeneratorReplicas := default 1
        (or (and $meta (index $meta "loadGeneratorReplicas"))
            (index . "loadGeneratorReplicas")) -}}
{{- $frontendPublicUrl := default "http://localhost:8081"
        (or (and $meta (index $meta "frontendPublicUrl"))
            (index . "frontendPublicUrl")) -}}
{{- $frontendConfigScript := printf "window.__BACKEND_URL__ = '%s';" $frontendPublicUrl -}}
{{- $loadGeneratorActions := default "book_ticket,cancel_ticket,give_feedback"
        (or (and $meta (index $meta "loadGeneratorActions"))
            (index . "loadGeneratorActions")) -}}
{{- $loadGeneratorBaseRps := default "2"
        (or (and $meta (index $meta "loadGeneratorBaseRps"))
            (index . "loadGeneratorBaseRps")) -}}
{{- $loadGeneratorRampFactor := default "1.35"
        (or (and $meta (index $meta "loadGeneratorRampFactor"))
            (index . "loadGeneratorRampFactor")) -}}
{{- $loadGeneratorRampInterval := default "60"
        (or (and $meta (index $meta "loadGeneratorRampIntervalSeconds"))
            (index . "loadGeneratorRampIntervalSeconds")) -}}
{{- $loadGeneratorRunDuration := default "300"
        (or (and $meta (index $meta "loadGeneratorRunDurationSeconds"))
            (index . "loadGeneratorRunDurationSeconds")) -}}

global:
  gc: false
  uuid: {{ $uuid }}
  measurements:
    - name: podLatency

jobs:
  - name: deploy-application
    jobType: create
    jobIterations: 1
    preLoadPeriod: 5s
    qps: 5
    burst: 5
    waitWhenFinished: true
    cleanup: false
    namespacedIterations: false
    namespace: {{ $namespace }}
    jobPause: {{ $baselinePause }}
    objects:
      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/backend-deployment.yml
        kind: Deployment
        apiVersion: apps/v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          backendName: {{ $backendName }}
          backendImage: {{ $backendImage }}
          backendReplicas: {{ $backendReplicas }}
          appName: {{ $appName }}

      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/backend-service.yml
        kind: Service
        apiVersion: v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          backendName: {{ $backendName }}
          backendServiceName: {{ $backendService }}

      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/frontend-configmap.yml
        kind: ConfigMap
        apiVersion: v1
        replicas: 1
        runOnce: true
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          frontendConfigName: {{ $frontendConfigName }}
          frontendName: {{ $frontendName }}
          frontendConfigScript: {{ $frontendConfigScript }}

      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/frontend-deployment.yml
        kind: Deployment
        apiVersion: apps/v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          frontendName: {{ $frontendName }}
          frontendImage: {{ $frontendImage }}
          frontendConfigName: {{ $frontendConfigName }}
          frontendReplicas: {{ $frontendReplicas }}

      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/frontend-service.yml
        kind: Service
        apiVersion: v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          frontendName: {{ $frontendName }}
          frontendServiceName: {{ $frontendService }}
{{- if $enableLoad }}
  - name: start-load-generator
    jobType: create
    jobIterations: 1
    preLoadPeriod: 5s
    qps: 2
    burst: 2
    waitWhenFinished: true
    cleanup: false
    namespacedIterations: false
    namespace: {{ $namespace }}
    jobPause: {{ $loadPause }}
    objects:
      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/load-generator-deployment.yml
        kind: Deployment
        apiVersion: apps/v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          loadGeneratorName: {{ $loadName }}
          loadGeneratorImage: {{ $loadImage }}
          loadGeneratorReplicas: "{{ $loadGeneratorReplicas }}"
          loadGeneratorTargetUrl: {{ printf "http://%s.%s.svc.cluster.local:8080/api/interaction" $backendService $namespace }}
          loadGeneratorActions: {{ $loadGeneratorActions }}
          loadGeneratorBaseRps: "{{ $loadGeneratorBaseRps }}"
          loadGeneratorRampFactor: "{{ $loadGeneratorRampFactor }}"
          loadGeneratorRampIntervalSeconds: "{{ $loadGeneratorRampInterval }}"
          loadGeneratorRunDurationSeconds: "{{ $loadGeneratorRunDuration }}"

      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/load-generator-service.yml
        kind: Service
        apiVersion: v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          loadGeneratorServiceName: {{ $loadService }}
          loadGeneratorName: {{ $loadName }}
          appName: {{ $appName }}

  - name: stop-load-generator
    jobType: delete
    jobIterations: 1
    namespacedIterations: false
    namespace: {{ $namespace }}
    waitWhenFinished: false
    objects:
      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/load-generator-deployment.yml
        kind: Deployment
        apiVersion: apps/v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          loadGeneratorName: {{ $loadName }}

      - objectTemplate: examples/demos/app-load-demo/workloads/objectTemplates/load-generator-service.yml
        kind: Service
        apiVersion: v1
        replicas: 1
        labelSelector:
          kube-burner-uuid: {{ $uuid }}
        inputVars:
          namespace: {{ $namespace }}
          loadGeneratorServiceName: {{ $loadService }}
{{- end }}
